%{
#include <string>
#include "parser.h" /* Generated by Bison */

extern int yylineno;
void yyerror(const char* s, ...);
%}

%option noyywrap nodefault yylineno

digs [0-9]+
letters [a-z|A-Z|_]+[a-z|A-Z|_|0-9]*

%%

[ \t]               ; //ignores spaces

{letters}	    {yylval.text = yytext; return T_STRING;}	
{digs}              {yylval.value = std::atoi(yytext); return T_INT;}
"+"                 {return T_PLUS;} /*special character with " "*/
"-"                 {return T_MINUS;} /*special character with " "*/
\*                  {return T_TIMES;} /* special character with \ */
"="		    {return T_ATT;}
"int" 		    {return T_INT2;}
"/"                 {return T_DIVIDE;} /*special character with " "*/
"("                 {return T_OPEN_PAR;} /*special character with " "*/
")"                 {return T_CLOSING_PAR;} /*special character with " "*/
\n                  {return T_NL;}
.                   {yyerror("Unknown token! %c\n", *yytext);} /*complains about every unknown character*/

%%

void yyerror(const char *s, ...){
    va_list ap;
    va_start(ap, s);
    std::fprintf(stderr, "Line %d: error: ", yylineno);
    std::vfprintf(stderr, s, ap);
}
